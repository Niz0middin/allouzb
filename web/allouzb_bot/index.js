//https://www.youtube.com/watch?v=_TMUowcFP5c&list=PLoN_ejT35AEhzNoPStBzAkpqAu3YQwPj7&index=10
// cart uchun tutorial ozi bitkan cart


const TelegramBot = require('node-telegram-bot-api')
const config = require('./config')
const helper = require('./helper')
const keyboard = require('./keyboard')
const kb = require('./keyboard-buttons')
//const ikb = require('./inline-keyboard')
//const fs = require('fs')
const fetch = require('node-fetch')  //installed npm node-fetch for api
const mysql = require('mysql')

helper.logStart()
const bot = new TelegramBot(config.TOKEN,{
    polling: true
})

var indexOf=0, lock=0, address_lock=0, phone_lock=0, finish=0, id
var finalCartByChatId=[]
// Listen on the 'polling_error' event
bot.on('polling_error', (error) => {
	var time = new Date();
	console.log("TIME:", time);
	console.log("CODE:", error.code);  // => 'EFATAL'
	console.log("MSG:", error.message);
	console.log("STACK:", error.stack);
});
var username=''
var table_name='client'

bot.onText(/\/ukamuxladin/,msg=>{
    bot.sendMessage(msg.chat.id,'‚ö†Ô∏è Warning.\n  Orders are disallowed.')
    table_name='disabled'
})
bot.onText(/\/allouzb_success/,msg=>{
    bot.sendMessage(msg.chat.id,'‚úÖ Success!\n  Functionality has been fixed.')
    table_name='client'
})

bot.onText(/\/start/,msg=>{
    

    const text = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à –º–∞–≥–∞–∑–∏–Ω ${msg.from.first_name}\n–í—ã–±–µ—Ä–µ—Ç—å–µ –∫–æ–º–∞–Ω–¥—É:`
    bot.sendMessage(helper.getChatId(msg),text,{
        reply_markup:{
            keyboard: keyboard.home,
            resize_keyboard: true 
        }
    })
})

bot.on('message', msg=>{
    counter=0
    const chatId = helper.getChatId(msg)
    var cartByChatId = cart.filter(item =>item.chatId==msg.chat.id)
    //indexOf = cart.filter(item =>item.chatId==msg.chat.id).length
    console.log('cartByChatId length>>> '+indexOf)
    
    switch(msg.text){
        case kb.home.catalogs:
            bot.sendMessage(chatId,'–ö–∞—Ç–∞–ª–æ–≥',{
                reply_markup:{
                    keyboard:keyboard.exit,
                    resize_keyboard:true
                }
            })
            .then(()=>{
                fetch(config.pre_url+'/category/get')
                    .then(response => response.json())
                    .then(data=>{
                        var send_to_root=key_value_pairs(data.data)
                        bot.sendMessage(chatId,'–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:',{
                            reply_markup:{
                                inline_keyboard:send_to_root
                            }
                        })
                    })
                
                
            })
            break
        
        case kb.home.bin:
            console.log('BINda>>'+JSON.stringify(cartByChatId))
            
            if(cartByChatId.length == 0){
                console.log('cart null')
                bot.sendMessage(chatId,'–í –∫–æ—Ä–∑–∏–Ω–µ –ø—É—Å—Ç–æ üõí\n –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ö–∞—Ç–∞–ª–æ–≥, —Ç–∞–º –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ')

            }else{
                indexOf=0;
                calculated_cost = cartByChatId[0].cost*cartByChatId[0].count
                dataObj[2]=cartByChatId[indexOf].id
            
                var total_amount = 0    
                for(var i in cartByChatId){
                    total_amount=total_amount + parseFloat(cartByChatId[i].cost)*cartByChatId[i].count
                }
            //console.log('total_amount: '+total_amount)   

                fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
                .then(data=>{
                    bot.sendMessage(chatId,'üõç –ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[0].cost+' UZS '+' x '+cartByChatId[0].count+' = '+calculated_cost+' UZS '+'\n\n'+'<a href="allouzb'+data.img+'">'+data.description+'</a>',{
                        reply_markup:{
                            inline_keyboard: [
                                [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cartByChatId[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                                [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                                [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                            ]
                        },
                        parse_mode:'HTML'
                    })

                })
            }
            break
//bitta teppadigi home.bin bilan birxil
        case '‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É':
            address_lock=0, phone_lock=0, finish=0
            console.log('BINda>>'+JSON.stringify(cartByChatId))
            
            if(cartByChatId.length == 0){
                bot.sendMessage(chatId,'–í –∫–æ—Ä–∑–∏–Ω–µ –ø—É—Å—Ç–æ üõí\n –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ö–∞—Ç–∞–ª–æ–≥, —Ç–∞–º –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ')

            }else{
                indexOf=0;
                calculated_cost = cartByChatId[0].cost*cartByChatId[0].count
                dataObj[2]=cartByChatId[indexOf].id
            
                var total_amount = 0    
                for(var i in cartByChatId){
                    total_amount=total_amount + parseFloat(cartByChatId[i].cost)*cartByChatId[i].count
                }
            //console.log('total_amount: '+total_amount)   

                fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
                .then(data=>{
                    bot.sendMessage(chatId,'üõç –ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[0].cost+' UZS '+' x '+cartByChatId[0].count+' = '+calculated_cost+' UZS '+'\n\n'+'<a href="'+config.pre_url_picture+data.img+'">'+data.description+'</a>',{
                        reply_markup:{
                            inline_keyboard: [
                                [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cartByChatId[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                                [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                                [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                            ]
                        },
                        parse_mode:'HTML'
                    })

                })
            }
            break
        
        case 'üö´ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–∫–∞–∑':
            address_lock=0, phone_lock=0, finish=0
            bot.sendMessage(chatId,'‚ùå –í–∞—à –ó–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.\n',{
                reply_markup:{
                    keyboard: keyboard.home,
                    resize_keyboard: true 
                }
            })
            break
        case kb.home.orders:
            fetch(config.pre_url+`/cart/get-client-order?chat_id=${chatId}`).then(response => response.json())
                .then(data=>{
                    console.log(JSON.stringify(data));
                    if(data!='There is no order of this user'){

                    
                    var orders = data
                    orders.forEach(json=>{
                        if(json.status==1){
                            var status = 'üïê –í –æ–∂–∏–¥–∞–Ω–∏–∏'
                        }else if(json.status==2){
                            status = '‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –æ–¥–æ–±—Ä–µ–Ω'
                        }
                        else{
                            status=json.status
                        }
                        bot.sendChatAction(chatId,'typing')
                        .then(()=>{
                            bot.sendMessage(chatId,'üìù –ó–∞–∫–∞–∑ ‚Ññ '+json.order_key+'\n\nüõé –°—Ç–∞—Ç—É—Å: '+status+'\nüìÖ –î–∞—Ç–∞: '+json.time+'\nüíµ –û–±—â–∞—è —Å—É–º–º–∞: '
                                +json.cost+' UZS'+'\n\nüöö –î–æ—Å—Ç–∞–≤–∫–∞: –î–æ—Å—Ç–∞–≤–∏—Ç—å/Yetqazib berish\n'+'üìç –ê–¥—Ä–µ—Å: '+json.location+'\n\nüõç –¢–æ–≤–∞—Ä—ã: \n'+json.description,{
                                reply_markup:{
                                    keyboard:keyboard.home,
                                    resize_keyboard:true
                                }
                        
                    })
                        })
                    })

                }else{
                    bot.sendMessage(chatId,'‚ö†Ô∏è –ù–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–∫–∞–∑–æ–≤!')
                }

                })

                
            break
        
        case kb.home.news:
            fetch(config.pre_url+'/news/get')
            .then(response => response.json())
            .then(data=>{
                if(data!=null){

                
                id = data.id
                bot.sendChatAction(chatId,"upload_photo").then(()=>{
                    bot.sendPhoto(chatId,'.'+data.img.substr(12,data.img.length),{
                        caption: data.created_at + '\n\n'+ data.text,
                        reply_markup:{
                            keyboard: keyboard.news,
                            resize_keyboard:true
                        }
                    })
                }) 
            }else{
                bot.sendMessage(chatId,'üì∞ –ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç!')
            }
            })
            
            break
        //more knopka bosilganda
        case kb.more.more:
                fetch(config.pre_url+`/news/get?id=${id}`).then(response => response.json())
                .then(data=>{
                    if(data==null){
                        bot.sendMessage(chatId,'‚ö†Ô∏è –î—Ä—É–≥–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç! üóû')
                    }else{

                    id = data.id
                    bot.sendChatAction(chatId,"upload_photo").then(()=>{
                        bot.sendPhoto(chatId,'.'+data.img.substr(12,data.img.length),{
                            caption: data.created_at + '\n\n'+ data.text,
                            reply_markup:{
                                keyboard: keyboard.news,
                                resize_keyboard:true
                            }
                        })
                    })
                    
                    
                 }

                })
            break
        case kb.home.help:
            bot.sendMessage(chatId,'–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é –ø–æ–º–æ—â—å. –ï—Å–ª–∏ –í–∞—à –≤–æ–ø—Ä–æ—Å –Ω–µ —Ä–µ—à–µ–Ω, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∂–∏–≤–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É @'+config.reception_admin_user_name,{
                reply_markup:{
                    keyboard: keyboard.help,
                    resize_keyboard:true
                }
            })
            break
        case kb.help.call:
            bot.sendMessage(chatId,'‚òéÔ∏è –ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è "allo_uz"\n'+config.reception_admin_phone)
            break 
        
        case kb.help.write:
            lock=1
            
            bot.sendMessage(chatId,'‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!!! \n\n–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤. –ï—Å–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Username), —Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (Username) –∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –≤–∞—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ. –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ. \n\n–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚úçÔ∏èüëáüèº',{
                reply_markup:{
                    keyboard:keyboard.cancel,
                    resize_keyboard:true
                }
            })

            break

            
        //knopka nazad
        case kb.cancel.cancel:
            lock=0
            if(msg.text.toLowerCase=='–æ—Ç–º–µ–Ω–∞')
            {
                bot.deleteMessage(chatId,messageId2)
            }
            bot.sendMessage(chatId,'–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n/catalog - –ö–∞—Ç–∞–ª–æ–≥\n\n –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏–∂–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏ –∏ –ø–æ–ª—É—á–∏—Ç–µ –∫—Ä–∞—Ç–∫—É—é –ø–æ–º–æ—â—å. –ï—Å–ª–∏ –í–∞—à –≤–æ–ø—Ä–æ—Å –Ω–µ —Ä–µ—à–µ–Ω, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∂–∏–≤–æ–º—É –æ–ø–µ—Ä–∞—Ç–æ—Ä—É @abusaid_umarov.',{
                reply_markup:{
                    keyboard: keyboard.help,
                    resize_keyboard:true
                }
            })

            break
        case kb.back.backward:
            if(msg.text.toLowerCase=='–Ω–∞–∑–∞–¥')
            {
                bot.deleteMessage(chatId,messageId2)
            }

            bot.sendMessage(chatId,'–ì–ª–∞–≤–Ω—ã–π –º–µ–Ω—é',{
                reply_markup:{
                    keyboard: keyboard.home,
                    resize_keyboard: true 
                }
            })
            break
        case kb.exit.exit:
            bot.sendMessage(chatId,'–ì–ª–∞–≤–Ω—ã–π –º–µ–Ω—é',{
                reply_markup:{
                    keyboard: keyboard.home,
                    resize_keyboard: true 
                }
            })
            break


        case kb.exit.mcatalogue:
            fetch(config.pre_url+'/category/get')
            .then(response => response.json())
            .then(data=>{
                var send_to_root=key_value_pairs(data.data)
                bot.sendMessage(chatId,'–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–æ–≤:',{
                    reply_markup:{
                        inline_keyboard:send_to_root
                    }
                })
            })
            break

        case 'üööüì¶ –î–æ—Å—Ç–∞–≤–∏—Ç—å/Yetqazib\nberish':
            if(cartByChatId.length!=0){
                


//Database Connection*******************************************
    var connection = mysql.createConnection({
        host     : 'localhost',
        user     : 'root',
        password : 'root',
        database : 'allouzb'
      });
    connection.connect();
    if(msg.from.username==undefined){
        username='username –æ—Ç—Å—É—Å—Ç–≤—É–µ—Ç'
    }else{
        username=msg.from.username
    }
    connection.query(`REPLACE ${table_name} (id,name,tel) VALUES (${msg.from.id},'${username}',${null})`,(err,results,fields)=>{
        if(err) {console.log('DataBase Error>> '+err)};
        if(fields){console.log('field'+fields.toString())}
    })
    connection.end()
    //end Database Connection****************************************



                
            
            var total_amount = 0    
            for(var i in cartByChatId){
                total_amount=total_amount + parseFloat(cartByChatId[i].cost)*cartByChatId[i].count
            }

          /*console.log('cartByChatId>> '+JSON.stringify(cartByChatId))
            //console.log('cart bychatid>>> '+JSON.stringify(cartByChatId))
            console.log('total_amount>> '+total_amount)
            console.log('chatid>> '+msg.from.id)
            console.log('firstname>> '+msg.from.first_name)
            console.log('lastname>> '+msg.from.last_name)
            console.log('username>> '+msg.from.username)*/
            
            //PUSH chatid
            finalCartByChatId = cartByChatId
            phone_lock=1
            bot.sendMessage(chatId,'‚òéÔ∏è –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞:',{
                reply_markup:{
                    one_time_keyboard:true,
                    resize_keyboard:true,
                    keyboard:[
                        [{text:'‚òéÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä', request_contact: true}],
                        ['‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É'],
                        ['üö´ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–∫–∞–∑']
                    ]
                }
            })
             .then(()=>{
                phone_lock=0
                bot.once("contact",(msg)=>{
                    
                    //console.log(JSON.stringify(msg))
                    console.log('name by contact>> '+msg.contact.first_name+'\nphone number>> '+msg.contact.phone_number) 
                    
                    //PUSH phonenumber
                    
                    finalCartByChatId.push({phonenumber:`${msg.contact.phone_number}`,chatId:`${msg.chat.id}`})
                    address_lock=1
                    bot.sendMessage(msg.chat.id,'üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ',{
                        reply_markup:{
                            one_time_keyboard:true,
                            resize_keyboard:true,
                            keyboard:[
                                ['‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É'],
                                ['üö´ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–∫–∞–∑']
                            ]
                        }
                    })
                })
            })
            }else{
                bot.sendMessage(chatId,'‚ö†Ô∏è –í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!',{
                    reply_markup:{
                        keyboard: keyboard.home,
                        resize_keyboard: true 
                    }
                })
            }

            break




            default:{
            //admin ga message jonatiw
                console.log(lock)
                if(lock==1){
                   //bazaga shu msg.text otziv ga yoziladi
                    //console.log(msg.text+'this will go to DB')
                    //console.log('chatid '+msg.from.id)
                    //console.log('firstname '+msg.from.first_name)
                   //tugadi bazaga yozish
                    bot.sendMessage(chatId,'–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤! –ê–¥–º–∏–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',{
                        reply_markup:{
                            keyboard:keyboard.back,
                            resize_keyboard:true
                        }
                    }).then(()=>{
                        bot.sendMessage(config.reception_admin_chat_id,'@'+msg.from.username + ' –æ—Ç–ø—Ä–∞–≤–∏–ª(-–∞) –æ—Ç–∑—ã–≤ üëáüèº:\n\n'+msg.text)
                    })
                    lock=0
                }
                
            //end adminga message jonatiw  
            
            
            if(finish==1){
              if(finalCartByChatId[0].chatId==msg.chat.id){
                //add_info.push([{time:`${msg.text}`,chatId:`${msg.chat.id}`}])
                finalCartByChatId.push({time:`${msg.text}`,chatId:`${msg.chat.id}`})
                console.log('cart>> '+JSON.stringify(finalCartByChatId))
                var send_finalCartByChatId = finalCartByChatId.filter(item =>item.chatId==msg.chat.id)
                
                //var l_add_info = add_info.filter(item=>item[0].chatId==msg.chat.id)
                //send_finalCartByChatId.push(l_add_info)
                //console.log('first_name'+msg.from.first_name)
                //console.log('second_name'+msg.from.last_name)
                //console.log('username '+msg.from.username)
                fetch(config.pre_url+`/cart/make`,{method:'POST',headers:{"Content-Type":"application/json"},body:JSON.stringify(send_finalCartByChatId)})
                .then((res)=>{
                    return res.json()
                })
                .then((json)=>{
                    if(json.status==1){
                        var status = 'üïñ –í –æ–∂–∏–¥–∞–Ω–∏–∏'
                    }else{
                        status=json.status
                    }
                    bot.sendMessage(chatId,'üìù –ó–∞–∫–∞–∑ ‚Ññ '+json.order_key+'\n\nüõé –°—Ç–∞—Ç—É—Å: '+status+'\nüïñ –î–∞—Ç–∞: '+json.time+'\nüíµ –û–±—â–∞—è —Å—É–º–º–∞: '
                    +json.cost+' UZS'+'\n\nüöö –î–æ—Å—Ç–∞–≤–∫–∞: –î–æ—Å—Ç–∞–≤–∏—Ç—å/Yetqazib berish\n'+'üìç –ê–¥—Ä–µ—Å: '+json.location+'\n\nüõç –¢–æ–≤–∞—Ä—ã: \n'+json.description,{
                        reply_markup:{
                            keyboard:keyboard.home,
                            resize_keyboard:true
                        }
                        
                    })
                    .then(()=>{
                        bot.sendMessage(chatId,'‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –ø—Ä–∏–Ω—è—Ç –∏ —Å—Ç–∞—Ç—É—Å –≤ –æ–∂–∏–¥–∞–Ω–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –≤—ã –±—É–¥–µ—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ —Å—Ç–∞—Ç—É—Å–µ –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞.'+
                        '\n\n–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: '+'@username\n–ù–∞—à –∞–¥—Ä–µ—Å: xxxxxx xxxxx\n–¢–µ–ª–µ—Ñ–æ–Ω: +99891 111 11 11')
                         removeItemFromCartAll(chatId);
                        
                    })
                    .then(()=>{
                        bot.sendMessage(-1001394878997,'üõé –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç ‚Ññ '+json.order_key+'.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –≤–∞—à –±—Ä–∞—É–∑–µ—Ä.üîÑ')
                    })
                    
                })
                
               
                
                finish=0
             }
            }


            //geo location orniga address jonatiw
                if(address_lock==1){//finish=1
                  if(finalCartByChatId[0].chatId==msg.chat.id){
                    console.log(JSON.stringify(msg,null,4))
                    
                    //console.log(msg.location.latitude+','+msg.location.latitude+' <<'+' <<bu address boliwi kk')
                    if(msg.location!=undefined){
                        //add_info.push({location:`https://google.com/maps/?q=${msg.location.latitude},${msg.location.longitude}`,chatId:`${msg.chat.id}`})
                        finalCartByChatId.push({location:`https://google.com/maps/?q=${msg.location.latitude},${msg.location.longitude}`,chatId:`${msg.chat.id}`})
                    }else{
                        //PUSH location text
                        //add_info.push([{location:`${msg.text}`,chatId:`${msg.chat.id}`}])
                        finalCartByChatId.push({location:`${msg.text}`,chatId:`${msg.chat.id}`})
                    }
                    //console.log('last bychi>>>>> '+JSON.stringify(finalCartByChatId,null,4))
                    bot.sendMessage(chatId,'üïê –í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –∏ –∫–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å?',{
                        reply_markup:{
                            resize_keyboard: true,
                            one_time_keyboard:true,
                            keyboard:[
                                ['üö´ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–∫–∞–∑']
                            ]
                        }
                    })
                    address_lock=0
                    finish=1
                 }
                }
             //end of geo location jonatiw


                if(phone_lock==1){
                    //PUSH phonenumber
                  if(finalCartByChatId[0].chatId==msg.chat.id){
                    
                    finalCartByChatId.push({phonenumber:`${msg.text}`,chatId:`${msg.chat.id}`})
                    address_lock=1
                    bot.sendMessage(msg.chat.id,'üìç –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ',{
                        reply_markup:{
                            one_time_keyboard:true,
                            resize_keyboard:true,
                            keyboard:[
                                ['‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É'],
                                ['üö´ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–∫–∞–∑']
                            ]
                        }
                    })
                    phone_lock=0
                  }
                }
                

            }

            
        
    }
})








bot.on('callback_query',query=>{
    var status,sub_category
    var calculated_cost
    var cartByChatId = cart.filter(item =>item.chatId==query.message.chat.id)
    

    if(query.data.slice(0,3)=='add'){
console.log('add kupit knopka')
        
        dataObj=query.data.split(" ")
        counter=parseInt(dataObj[3])+1

        fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
        .then(data=>{
        
        //var description=dataObj.slice(4,dataObj.length).join(" ")
        var description = /*data.description*/ data.name+' - '+data.description
         
         //console.log('here add>>>>  '+dataObj[0]) //add digan text
         console.log('here id>>>>  '+dataObj[2]) //id
         console.log('here cost>>>>  '+dataObj[1]) //cost
         console.log('num of>>>> '+counter) //counter
         console.log('descript>>> '+description) //description
//f
        addItemToCart(dataObj[2],dataObj[1],counter,description,query.message.chat.id)
console.log('cart added'+JSON.stringify(cart))

        bot.editMessageCaption(description,{
            chat_id:query.message.chat.id,
            message_id: query.message.message_id,
            reply_markup:{
                inline_keyboard:[
                    [{text:'üõç –ö—É–ø–∏—Ç—å - '+dataObj[1]+' UZS'+' ('+counter +'—à—Ç.)',callback_data:'add'+' '+dataObj[1]+' '+dataObj[2]+' '+counter}],
                    [{text:'üõí –í –∫–æ—Ä–∑–∏–Ω—É',callback_data:'bin'}]
                ]
            }
        }).catch((err)=>{console.log(err)})
    })
    
    }else if(query.data=='bin'){
console.log('bin v korzinu')
console.log('BINda>>'+JSON.stringify(cart))

//cartById
            //var description=dataObj.slice(4,dataObj.length).join(" ")
            calculated_cost = cartByChatId[0].cost * cartByChatId[0].count
            dataObj[2]=cartByChatId[indexOf].id
            
//calculating total amount in cart
            
            var total_amount = 0    
            for(var i in cartByChatId){
                total_amount=total_amount + parseFloat(cartByChatId[i].cost) * cartByChatId[i].count
            }
            //console.log('total_amount: '+total_amount)   

        fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
        .then(data=>{
            bot.sendMessage(query.message.chat.id,'–ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[0].cost+' UZS '+' x '+cartByChatId[0].count+' = '+calculated_cost.toFixed(2)+' UZS '+'\n\n'+'<a href="'+config.pre_url_picture+data.img+'">'+data.description+'</a>',{
                reply_markup:{
                    inline_keyboard: [
                        [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cart[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                        [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                        [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount.toFixed(2)+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                    ]
                },
                parse_mode:'HTML'
            })
        })
    
    }else if(query.data=='‚ùå'){
        
        console.log('indexOf initial '+indexOf)
        if(indexOf>0){
            //indexOf++;
            dataObj[2]=cartByChatId[indexOf].id
            indexOf--;
        }else if(indexOf==0){
            dataObj[2]=cartByChatId[indexOf].id
            //indexOf++;
        }
        else{
            indexOf--;
            dataObj[2]=cartByChatId[indexOf+1].id
        }
        
        
        
        
        console.log('id tovar to be delted >>'+dataObj[2])
        console.log('cartbychatid  '+JSON.stringify(cartByChatId))

        removeItemFromCart(dataObj[2],query.message.chat.id)
        cartByChatId = cart.filter(item =>item.chatId==query.message.chat.id)
        console.log('cartbychatid d>>'+JSON.stringify(cartByChatId)) 

        if(cartByChatId.length!=0){
            calculated_cost = cartByChatId[indexOf].cost * cartByChatId[indexOf].count
            var total_amount = 0    
            
            for(var i in cartByChatId){
                total_amount=total_amount + parseFloat(cartByChatId[i].cost)*cartByChatId[i].count
            }

        dataObj[2]=cartByChatId[indexOf].id
        fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
            .then(data=>{
            bot.editMessageText('–ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[indexOf].cost+' UZS '+' x '+cartByChatId[indexOf].count+' = '+calculated_cost.toFixed(2)+' UZS \n\n'+'<a href="'+config.pre_url_picture+data.img+'">'+data.description+'</a>',{
                chat_id: query.message.chat.id,
                message_id:query.message.message_id,
                reply_markup:{
                    inline_keyboard:[
                        [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cartByChatId[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                        [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                        [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount.toFixed(2)+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                    ]
                },
                parse_mode:'HTML'
                
            })
        })

        }else{
            console.log('cart empty(')
            bot.deleteMessage(query.message.chat.id,query.message.message_id).then(()=>{
                fetch(config.pre_url+'/category/get')
                    .then(response => response.json())
                    .then(data=>{
                        //var send_to_root=key_value_pairs(data.data)
                        bot.sendMessage(query.message.chat.id,'–í –∫–æ—Ä–∑–∏–Ω–µ –ø—É—Å—Ç–æ üõí\n –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ö–∞—Ç–∞–ª–æ–≥, —Ç–∞–º –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ',{
                            reply_markup:{
                                keyboard: keyboard.home,
                                resize_keyboard: true
                            }
                            
                            
                        })
                    })
            })
            
        
        }

    
    }else if(query.data=='‚óÄÔ∏è'){
            indexOf--;
            if(indexOf>=0){
console.log('indexOf*** '+indexOf)
                dataObj[2]=cartByChatId[indexOf].id
console.log('chap<<'+dataObj[2])
                calculated_cost = cartByChatId[indexOf].cost * cartByChatId[indexOf].count
                //var description=dataObj.slice(4,dataObj.length).join(" ")
                
                var total_amount = 0    
                for(var i in cartByChatId){
                    total_amount=total_amount + parseFloat(cartByChatId[i].cost) * cartByChatId[i].count
                }

        fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
        .then(data=>{
                bot.editMessageText('–ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[indexOf].cost+' UZS '+' x '+cartByChatId[indexOf].count+' = '+calculated_cost.toFixed(2)+' UZS \n\n'+'<a href="'+config.pre_url_picture+data.img+'">'+data.description+'</a>',{
                    chat_id: query.message.chat.id,
                    message_id:query.message.message_id,
                    reply_markup:{
                        inline_keyboard:[
                            [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cartByChatId[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                            [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                            [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount.toFixed(2)+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                        ]
                    },
                    parse_mode:'HTML'
                })
        })
            }else{console.log('no more left'+indexOf);indexOf++;indexOf=0;}
            

    }else if(query.data=='‚ñ∂Ô∏è'){

            indexOf++;
            if(indexOf<=(cartByChatId.length-1)){

                dataObj[2]=cartByChatId[indexOf].id
console.log('ong>>'+dataObj[2])
                calculated_cost = cartByChatId[indexOf].cost * cartByChatId[indexOf].count
                //var description=dataObj.slice(4,dataObj.length).join(" ")
                
                var total_amount = 0    
                for(var i in cartByChatId){
                    total_amount=total_amount + parseFloat(cartByChatId[i].cost)*cartByChatId[i].count
                }
                
                
            fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
                .then(data=>{ 
                bot.editMessageText('–ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[indexOf].cost+' UZS '+' x '+cartByChatId[indexOf].count+' = '+calculated_cost.toFixed(2)+' UZS \n\n'+'<a href="'+config.pre_url_picture+data.img+'">'+data.description+'</a>',{
                    chat_id: query.message.chat.id,
                    message_id:query.message.message_id,
                    reply_markup:{
                        inline_keyboard:[
                            [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cartByChatId[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                            [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                            [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount.toFixed(2)+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                        ]
                    },
                    parse_mode:'HTML'
                })
            })
            }else{console.log('no more right'+indexOf);indexOf--;indexOf=cartByChatId.length-1;}
            
    
    }else if(query.data=='üîª'){
console.log('indexOf*** '+indexOf)
console.log('down cart '+JSON.stringify(cartByChatId))
            
            if(cartByChatId[indexOf].count!=1){
                dataObj[2]=cartByChatId[indexOf].id
                decrementItemInCart(dataObj[2],query.message.chat.id)
                calculated_cost = cartByChatId[indexOf].cost*cartByChatId[indexOf].count

                var total_amount = 0    
                for(var i in cartByChatId){
                    total_amount=total_amount + (parseFloat(cartByChatId[i].cost)).toFixed(2) *cartByChatId[i].count
                }

            fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
                .then(data=>{ 
                bot.editMessageText('–ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[indexOf].cost+' UZS '+' x '+cartByChatId[indexOf].count+' = '+calculated_cost.toFixed(2)+' UZS \n\n'+'<a href="'+config.pre_url_picture+data.img+'">'+data.description+'</a>',{
                    chat_id: query.message.chat.id,
                    message_id:query.message.message_id,
                    reply_markup:{
                        inline_keyboard:[
                            [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cartByChatId[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                            [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                            [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount.toFixed(2)+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                        ]
                    },
                    parse_mode:'HTML'
                })
            })

            }else{
                console.log('1ta qoldi')
            }
            
    }else if(query.data == 'üî∫'){
console.log('indexOf**** '+indexOf)  //cart digi orni
console.log('cartByChatId '+JSON.stringify(cartByChatId))
console.log('dataObj[2] '+dataObj[2]) //id of pruduct
            
            dataObj[2]=cartByChatId[indexOf].id
            incrementItemInCart(dataObj[2],query.message.chat.id)

            calculated_cost = cartByChatId[indexOf].cost*cartByChatId[indexOf].count

            var total_amount = 0    
            for(var i in cartByChatId){
                total_amount=total_amount + parseFloat(cartByChatId[i].cost)*cartByChatId[i].count
            }
            
console.log('Qara buyoga>>>>>>>'+calculated_cost)
        fetch(config.pre_url+`/product/img?id=${dataObj[2]}`).then(response => response.json())
            .then(data=>{ 
            bot.editMessageText('–ö–æ—Ä–∑–∏–Ω–∞:\n '+cartByChatId[indexOf].cost+' UZS '+' x '+cartByChatId[indexOf].count+' = '+calculated_cost.toFixed(2)+' UZS \n\n'+'<a href="'+config.pre_url_picture+data.img+'">'+data.description+'</a>',{
                chat_id: query.message.chat.id,
                message_id:query.message.message_id,
                reply_markup:{
                    inline_keyboard:[
                        [{text:'‚ùå',callback_data:'‚ùå'},{text:'üîª',callback_data:'üîª'},{text:cartByChatId[indexOf].count+' —à—Ç.',callback_data:'c'},{text:'üî∫',callback_data:'üî∫'}],
                        [{text:'‚óÄÔ∏è',callback_data:'‚óÄÔ∏è'},{text: (indexOf+1)+'/'+cartByChatId.length,callback_data:'nu'},{text:'‚ñ∂Ô∏è',callback_data:'‚ñ∂Ô∏è'}],
                        [{text:'‚úÖ –ó–∞–∫–∞–∑ –Ω–∞ '+total_amount.toFixed(2)+' UZS –û—Ñ–æ—Ä–º–∏—Ç—å?',callback_data:'formalize'}]
                    ]
                },
                parse_mode:'HTML'
            })
        })

    }else if(query.data=='nu'){
        console.log('No action')
    }else if(query.data=='c'){
        console.log('No action')
    }
    else if(query.data=='formalize'){
        console.log('formalize')
        
        bot.sendMessage(query.message.chat.id,'–£–∫–∞–∂–∏—Ç—å–µ –≤–∞—Ä–∏–∞–Ω—Ç –¥–æ—Å—Ç–∞–≤–∫–∏:',{
            reply_markup:{
                keyboard:[
                    ['üööüì¶ –î–æ—Å—Ç–∞–≤–∏—Ç—å/Yetqazib\nberish'],
                    ['‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –∫–æ—Ä–∑–∏–Ω—É','üö´ –û—Ç–º–µ–Ω–∏—Ç—å –ó–∞–∫–∞–∑']
                ],
                resize_keyboard:true
            }
        })
    }
    else{
    //BY API////////////////////////////// 

        fetch(config.pre_url+`/category/get?id=${query.data}`).then(response => response.json())
        .then(data=>{
            status = data.status //0 -keyboard yoki 1-good
            sub_category = key_value_pairs(data.data) //keyobard
            
            //callback_data = query.data  //callback_data bu id shuni id ga berish kk
            if(data.parent!=null){
                sub_category.push([{text:'‚ÜñÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Å—É–±-–∫–∞—Ç–∞–ª–æ–≥',callback_data:data.parent}])
            }
            
            //keyboard holati uchun
            if(status==0){
                console.log('status 0 keyobard')
                bot.deleteMessage(query.message.chat.id,query.message.message_id).then(()=>{
                    bot.sendMessage(query.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —á—Ç–æ–±—ã –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤:',{
                        reply_markup:{
                            inline_keyboard:sub_category, //shuyoga api digi DATA ni assign
                        }
                    })
                })

            }//data holati uchun
            else if(status==1){
                console.log('status 1 data')
                var goods = data.data
                var good_counter=0
                let promise = Promise.resolve()

                goods.forEach((good)=>{
                   promise = promise.then(()=>{
                    good_counter=good_counter+1
                    bot.sendChatAction(query.message.chat.id,'upload_photo').then(()=>{
                        bot.sendPhoto(query.message.chat.id,'.'+good.img.substr(12,good.img.length),{
                            caption:good.name+' - '+good.description,
                            reply_markup:{
                                inline_keyboard:[
                                    [{text:'üõç –ö—É–ø–∏—Ç—å - '+good.cost+' UZS' ,callback_data:'add'+' '+good.cost+' '+good.id+' '+counter}]
                                ]
                            }
                        }).then(()=>{}).catch((err)=>{console.log(err)})
                    })
                  }).then(()=>{//har bitta loop dan keyin bitta bitta ishlidi
                            })
                  promise.then(()=>{
                        //loop dan oldin hammasini ketma ket ishlatadi
                  })
                })
               
            }else{
                console.log('status is not either 0 or 1\n—ç—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞')
                bot.sendMessage(query.message.chat.id,'‚ö†Ô∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞!')
            }
        })

    //END BY API////////////////////////////// 
    }





})



//functions
        var cart = []
        var cartByChatId=[]
        var Item = function(id,cost,count,description,chatId){
            this.id = id
            this.cost = cost
            this.count = count
            this.description = description
            this.chatId = chatId
        }

        function addItemToCart(id,cost,count,description,chatId){
            for(var i in cart){
                if(cart[i].id === id && cart[i].chatId === chatId){
                    cart[i].count ++;
                    return
                }
            }
            var item = new Item(id,cost,count,description, chatId);
            cart.push(item);
        }


        function removeItemFromCart(id, chatId){
            for(var i in cart){
                if(cart[i].id===id && cart[i].chatId === chatId){
                    cart.splice(i,1);
                    break;
                }
            }
        }
        function incrementItemInCart(id, chatId){
            for(var i in cart){
                if(cart[i].id===id && cart[i].chatId === chatId){
                    cart[i].count++;
                    break
                }
            }
        }
        function decrementItemInCart(id, chatId){
            for(var i in cart){
                if(cart[i].id===id && cart[i].chatId === chatId){
                    if(cart[i].count>1){
                        cart[i].count--;
                    }else{
                        console.log('at least 1 item you should posess')
                        break
                    }    
                    break
                }
            }
        }

        function removeItemFromCartAll(chatId){
           
            for(var i in cart){
                if(cart[i].chatId===chatId){
                    cart.splice(i,1)
                }
            }
            //bu oxirgi item qop ketvotkani uchun yana bitta loop qivoriw kk
            for(var i in cart){
                if(cart[i].chatId===chatId){
                    cart.splice(i,1)
                }
            }

        
        }
        


//////////////```Plugins```///////////////////////////
        function key_value_pairs(obj) {
            var keys = _keys(obj);
            var length = keys.length;
            var pairs = Array(length);
            
            for (var i = 0; i < length; i++){
                pairs[i] = [obj[keys[i]]];
            }
            return pairs;
        }

        function _keys(obj){
            if (!isObject(obj)) return [];
            if (Object.keys) return Object.keys(obj);
            var keys = [];
            for (var key in obj) if (_.has(obj, key)) keys.push(key);
            return keys;
        }
        
        function isObject(obj){
            var type = typeof obj;
            return type === 'function' || type === 'object' && !!obj;
        }